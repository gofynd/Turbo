@import "../.././../../styles/main.less";

.productDetailsPage {
  max-width: @page-width;
}
.wishlist {
  position: absolute;
  top: 25px;
  inset-inline-end: 24px;
  cursor: pointer;
  width: 25px;
  height: 23px;
  z-index: 2;

  .wishlistIcon {
    &:hover {
      /deep/ svg path {
        fill: @TextHeading;
        fill-opacity: 1;
      }
    }
  }

  .active {
    /deep/ svg path {
      fill: @TextHeading;
      fill-opacity: 1;
    }
  }
}
.badge {
  position: absolute;
  text-align: center;
  // z-index: 2;
  bottom: 8px !important;
  inset-inline-start: 8px !important;
  top: unset !important;
  inset-inline-start: unset !important;
  padding: 4px var(--scale-8-px, 8px);
  height: fit-content;
  width: fit-content;
}
.b4 {
  bottom: 8px !important;
  inset-inline-start: 8px !important;
  font-size: 14px;
  font-weight: 400;
  line-height: 18px;
  letter-spacing: 0.28px;
  border-radius: 24px;
  background-color: @PageBackground;
  color: @TextBody;
  border: 1px solid @DividerStokes;
}
.galleryBox {
  .imageBox {
    position: relative;
    width: 100%;
    margin: 0 32px;
    .aspect-ratio(@ProductImgAspectRatio);
  }
  .imageItem {
    overflow: hidden;
  }
  .loader {
    min-height: 100%;
  }
  .flexAlign {
    display: flex;
  }
  .mouseCover {
    position: fixed;
    width: 100px;
    height: 100px;
    background-color: rgba(0, 0, 0, 0.5);
    cursor: pointer;
    pointer-events: none;
    display: none;
  }

  .imageGallery {
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    @media @tablet {
      display: none;
    }

    img {
      z-index: unset;
    }

    &__main {
      max-width: 100%;
      cursor: pointer;
    }
    .thumbSlider {
      display: flex;
      justify-content: center;
      margin-top: 18.5px;
      padding: 0 40px;

      .thumbWrapper {
        position: relative;
        width: 100%;
        max-width: 365px;

        .fitContent {
          width: fit-content;
        }

        .btnNavGallery {
          // z-index: @layer;
          background-color: transparent;
          cursor: pointer;
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
        }
        .nextBtn {
          inset-inline-end: -39px;
          [dir="rtl"] & {
            transform: rotate(180deg);
          }
        }
        .prevBtn {
          inset-inline-start: -39px;
          [dir="rtl"] & {
            transform: rotate(180deg);
          }
        }
      }
    }
    .thumbnailList {
      display: flex;
      gap: 8px;
      overflow-x: scroll;

      /* Hide scrollbar for Chrome, Safari and Opera */
      &::-webkit-scrollbar {
        display: none;
      }

      /* Hide scrollbar for IE, Edge add Firefox */
      -ms-overflow-style: none;
      scrollbar-width: none;
      /* Firefox */

      .thumbnail {
        border: 2px solid transparent;
        border-radius: @ImageRadius;
        aspect-ratio: @ProductImgAspectRatio;
        flex: 0 0 63px;
        overflow: hidden;
        cursor: pointer;
        position: relative;
        &.active {
          border-color: @ButtonPrimary;
        }
      }

      &--item {
        width: 100%;
        height: 100%;
      }

      .videoPlayIcon, .modelIcon {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: var(--icon-color);
      }

      .modelIcon {
        width: 24px;
        height: 24px;
      }

      .videoPlayIcon {
        width: 28px;
        height: 28px;
      }
    }
  }
  .mobile {
    display: none;

    @media @tablet {
      display: block;
    }
  }
}

.disableArrow {
  cursor: default;
  pointer-events: none;
  opacity: 0.5;
}

.navArrowIcon {
  width: 11px;
  height: 18px;
}

.carouselArrow {
  width: 48px;
  height: 48px;
  cursor: pointer;
  [dir="rtl"] & {
    transform: rotate(180deg);
  }
  rect:nth-of-type(1) {
    fill: @PageBackground !important;
  }
  path {
    fill: none;
    stroke: @TextHeading;
  }
  &--left {
    transform: rotate(180deg);
    [dir="rtl"] & {
      transform: unset;
    }
  }
}

.removeWidth {
  width: unset !important;
}
